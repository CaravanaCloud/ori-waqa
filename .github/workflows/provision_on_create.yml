name: provision_on_create

on:
  create:
    branches:
      - 'waqa/**'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-west-2
      VERSION_GRAALVM: 21.2.0

    steps:
      - uses: actions/checkout@v2
      
      - uses: nelonoel/branch-name@v1.0.1

      - name: generate Unique id
        run: echo UNIQ_ID=${BRANCH_NAME/\//-} >> $GITHUB_ENV

      - name: check unique id
        run: echo ${{ env.UNIQ_ID }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OCP_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OCP_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check AWS authentication
        run: aws sts get-caller-identity

      - name: Create IAM User
        run: aws iam create-user --user-name ${{ env.UNIQ_ID }}

      - name: Grant install privileges
        run: |
            aws iam attach-user-policy \
              --user-name ${{ env.UNIQ_ID }} \
              --policy-arn ${{ env.POLICY_ARN }}
        env:
          POLICY_ARN: "arn:aws:iam::aws:policy/AdministratorAccess"

      - name: Create Access Key User
        run: aws iam create-access-key --user-name ${{ env.UNIQ_ID }} --query "AccessKey" > ak.json
      
      - name: Export AK_ID
        run: echo NEW_ACCESS_KEY_ID="$(jq -r ".AccessKeyId" ak.json)" >> $GITHUB_ENV

      - name: Export SK_ID
        run: echo NEW_SECRET_ACCESS_KEY=$(jq -r ".SecretAccessKey" ak.json) >> $GITHUB_ENV

      - name: Wait
        run: sleep 10

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.NEW_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.NEW_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check new identity
        run: aws sts get-caller-identity

      - name: Provision ROSA Cluster
        run: echo provisioning rosa cluster
      

