name: provision_cluster

on:
  create:
    branches:
      - 'waqa/**'
  workflow_dispatch: {}

jobs:
  provision_cluster:
    runs-on: ubuntu-latest

    env:
      ROSA_URL: https://github.com/faermanj/rosa/releases/download/rosa-20211027_111456/rosa.tar.gz
      AWS_REGION: us-west-2

    steps:
      - uses: actions/checkout@v2
      
      - uses: nelonoel/branch-name@v1.0.1

      - name: generate Unique id
        run: echo UNIQ_ID=o7-$(date +%m%d%H%M) >> $GITHUB_ENV

      - name: check unique id
        run: echo ${{ env.UNIQ_ID }}

      - name: Download rosa binary
        run: |
          wget -q -O /tmp/rosa-linux.tar.gz ${{ env.ROSA_URL }}
          tar zxvf /tmp/rosa-linux.tar.gz -C  /tmp/
          sudo mv /tmp/rosa /usr/local/bin/ 
          rm /tmp/rosa-linux.tar.gz
        
      - name: Check rosa binary
        run: rosa version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OCP_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OCP_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check AWS authentication
        run: aws sts get-caller-identity

      - name: Login to ROSA
        run: rosa login --token=${{ secrets.ROSA_TOKEN }}

      - name: Verify ROSA permissions
        run: rosa verify permissions

      - name: Verify OC client
        run: rosa verify oc

      - name: Verify ROSA quotas
        run: rosa verify quota --region=${{ env.AWS_REGION }}
      
      - name: Verify ROSA identity
        run: rosa whoami
      
      - name: Init ROSA
        run: rosa init

      - name: Create ROSA cluster
        run: rosa create cluster -c ${{ env.UNIQ_ID }}
      
      - name: Wait until cluster is ready
        run: rosa wait-for install -c ${{ env.UNIQ_ID }}

      - name: Describe cluster
        run: rosa describe cluster -c ${{ env.UNIQ_ID }} -o json

      # TODO login by cluster name
      - name: Get cluster API
        run: |
          CLUSTER_API=$(rosa describe cluster -c ${{ env.UNIQ_ID }} -o json | jq -r ".api.url")
          echo CLUSTER_API=$CLUSTER_API
          echo CLUSTER_API=$CLUSTER_API >> $GITHUB_ENV

      - name: Create admin
        run: rosa create admin -c ${{ env.UNIQ_ID }} -p ${{ secrets.CLUSTER_PASSWORD }} | tee rosa_admin_out.txt
          
      - name: Print admin
        run: |
          LOGIN_CMD=$(cat rosa_admin_out.txt | grep https)
          echo $LOGIN_CMD
      
      - name: Login as admin
        run: oc login ${{ env.CLUSTER_API }} --insecure-skip-tls-verify --username admin --password ${{ secrets.CLUSTER_PASSWORD }}
      
      - name: Check login
        run: oc whoami

      - name: Next
        run: echo next step
